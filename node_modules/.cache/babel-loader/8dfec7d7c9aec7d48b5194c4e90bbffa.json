{"ast":null,"code":"var _jsxFileName = \"/Users/mamikos/Documents/WebDev/cobareactwebapp/src/pages/Login.js\";\nimport React, { useCallback, useContext } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { withRouter, Redirect } from 'react-router';\nimport firebaseServices from \"../services/firebase\";\nimport { AuthContext } from '../services/auth';\nimport * as firebase from \"firebase/app\";\n\nconst Login = ({\n  history\n}) => {\n  const handleLogin = useCallback(async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = event.target.elements;\n\n    try {\n      await firebaseServices.auth().signInWithEmailAndPassword(email.value, password.value);\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  if (currentUser) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    className: \"mt-5 container col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"InputEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    id: \"InputEmail\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"InputPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    id: \"InputPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"RememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"RememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Remember Me\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebaseServices.auth(),\n    className: \"btn btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebaseServices.auth(),\n    className: \"btn btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default withRouter(Login); // Configure FirebaseUI.\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\nconst uiConfigFacebook = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};","map":{"version":3,"sources":["/Users/mamikos/Documents/WebDev/cobareactwebapp/src/pages/Login.js"],"names":["React","useCallback","useContext","StyledFirebaseAuth","withRouter","Redirect","firebaseServices","AuthContext","firebase","Login","history","handleLogin","event","preventDefault","email","password","target","elements","auth","signInWithEmailAndPassword","value","push","error","alert","currentUser","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","uiConfigFacebook"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext } from 'react';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport { withRouter, Redirect } from 'react-router';\nimport firebaseServices from \"../services/firebase\";\nimport { AuthContext } from '../services/auth';\n\nimport * as firebase from \"firebase/app\";\n\n\n\nconst Login = ({ history }) => {\n\n    const handleLogin = useCallback(\n        async event => {\n            event.preventDefault();\n            const { email, password } = event.target.elements;\n            try {\n                await firebaseServices.auth().signInWithEmailAndPassword(email.value, password.value);\n                history.push(\"/\");\n            }\n            catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    const { currentUser } = useContext(AuthContext);\n\n\n    if (currentUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            <form onSubmit={handleLogin} className=\"mt-5 container col-4\">\n\n                <div className=\"form-group\">\n                    <label for=\"InputEmail\">Email address</label>\n                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"InputEmail\" aria-describedby=\"emailHelp\" />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"InputPassword\">Password</label>\n                    <input type=\"password\" name=\"password\" className=\"form-control\" id=\"InputPassword\" />\n                </div>\n                <div className=\"form-group form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"RememberMe\" />\n                    <label className=\"form-check-label\" for=\"RememberMe\">Remember Me</label>\n                </div>\n                \n                 <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n\n                <hr></hr>\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebaseServices.auth()} className=\"btn btn-block\" />\n\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebaseServices.auth()} className=\"btn btn-block\" />\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);\n\n\n// Configure FirebaseUI.\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n    }\n};\n\nconst uiConfigFacebook = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n    }\n};\n"]},"metadata":{},"sourceType":"module"}