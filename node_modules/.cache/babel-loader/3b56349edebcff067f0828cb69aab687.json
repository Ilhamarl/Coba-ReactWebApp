{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCke8i-8IEnjPpOewrluy3MTTdnqGKSTbo\",\n  authDomain: \"ilham-arl.firebaseapp.com\",\n  databaseURL: \"https://ilham-arl.firebaseio.com\",\n  projectId: \"ilham-arl\",\n  storageBucket: \"ilham-arl.appspot.com\",\n  messagingSenderId: \"1836056471\",\n  appId: \"1:1836056471:web:7c9fbdf7611d27d272ced2\",\n  measurementId: \"G-M0SMCN1BYK\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst userRef = firestore.doc(`users/${user.uid}`);\nconst snapshot = await userRef.get();\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nconst createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n  event.preventDefault();\n\n  try {\n    const {\n      user\n    } = await auth.createUserWithEmailAndPassword(email, password);\n    generateUserDocument(user, {\n      displayName\n    });\n  } catch (error) {\n    setError('Error Signing up with email and password');\n  }\n\n  setEmail(\"\");\n  setPassword(\"\");\n  setDisplayName(\"\");\n};","map":{"version":3,"sources":["/Users/mamikos/Documents/WebDev/cobareactwebapp/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","userRef","doc","user","uid","snapshot","get","generateUserDocument","additionalData","exists","email","displayName","photoURL","set","error","console","getUserDocument","userDocument","data","createUserWithEmailAndPasswordHandler","event","password","preventDefault","createUserWithEmailAndPassword","setError","setEmail","setPassword","setDisplayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,2BAFO;AAGnBC,EAAAA,WAAW,EAAE,kCAHM;AAInBC,EAAAA,SAAS,EAAE,WAJQ;AAKnBC,EAAAA,aAAa,EAAE,uBALI;AAMnBC,EAAAA,iBAAiB,EAAE,YANA;AAOnBC,EAAAA,KAAK,EAAE,yCAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAGP,MAAMC,OAAO,GAAGD,SAAS,CAACE,GAAV,CAAe,SAAQC,IAAI,CAACC,GAAI,EAAhC,CAAhB;AACA,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAOJ,IAAP,EAAaK,cAAb,KAAgC;AAChE,MAAI,CAACL,IAAL,EAAW;AACX,QAAMF,OAAO,GAAGD,SAAS,CAACE,GAAV,CAAe,SAAQC,IAAI,CAACC,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACI,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCT,IAAzC;;AACA,QAAI;AACF,YAAMF,OAAO,CAACY,GAAR,CAAY;AAChBF,QAAAA,WADgB;AAEhBD,QAAAA,KAFgB;AAGhBE,QAAAA,QAHgB;AAIhB,WAAGJ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOE,eAAe,CAACb,IAAI,CAACC,GAAN,CAAtB;AACD,CAlBI;;AAmBL,MAAMY,eAAe,GAAG,MAAMZ,GAAN,IAAa;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMa,YAAY,GAAG,MAAMjB,SAAS,CAACE,GAAV,CAAe,SAAQE,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGa,YAAY,CAACC,IAAb;AAFE,KAAP;AAID,GAND,CAME,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,CAXD;;AAcA,MAAMK,qCAAqC,GAAG,OAAOC,KAAP,EAAcV,KAAd,EAAqBW,QAArB,KAAkC;AAC9ED,EAAAA,KAAK,CAACE,cAAN;;AACA,MAAG;AACD,UAAM;AAACnB,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACwB,8BAAL,CAAoCb,KAApC,EAA2CW,QAA3C,CAArB;AACAd,IAAAA,oBAAoB,CAACJ,IAAD,EAAO;AAACQ,MAAAA;AAAD,KAAP,CAApB;AACD,GAHD,CAIA,OAAMG,KAAN,EAAY;AACVU,IAAAA,QAAQ,CAAC,0CAAD,CAAR;AACD;;AAEDC,EAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,EAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,EAAAA,cAAc,CAAC,EAAD,CAAd;AACD,CAbD","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCke8i-8IEnjPpOewrluy3MTTdnqGKSTbo\",\n    authDomain: \"ilham-arl.firebaseapp.com\",\n    databaseURL: \"https://ilham-arl.firebaseio.com\",\n    projectId: \"ilham-arl\",\n    storageBucket: \"ilham-arl.appspot.com\",\n    messagingSenderId: \"1836056471\",\n    appId: \"1:1836056471:web:7c9fbdf7611d27d272ced2\",\n    measurementId: \"G-M0SMCN1BYK\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nconst userRef = firestore.doc(`users/${user.uid}`);\nconst snapshot = await userRef.get();\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n      const { email, displayName, photoURL } = user;\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          photoURL,\n          ...additionalData\n        });\n      } catch (error) {\n        console.error(\"Error creating user document\", error);\n      }\n    }\n    return getUserDocument(user.uid);\n  };\n  const getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n      const userDocument = await firestore.doc(`users/${uid}`).get();\n      return {\n        uid,\n        ...userDocument.data()\n      };\n    } catch (error) {\n      console.error(\"Error fetching user\", error);\n    }\n  };\n\n\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n    event.preventDefault();\n    try{\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\n      generateUserDocument(user, {displayName});\n    }\n    catch(error){\n      setError('Error Signing up with email and password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };"]},"metadata":{},"sourceType":"module"}